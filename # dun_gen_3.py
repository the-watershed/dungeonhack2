# dun_gen_3.py

import random

class Dungeon:
    def __init__(self, width, height):
        self.width = width
        self.height = height
        self.map = [[1 for _ in range(width)] for _ in range(height)]

    def generate(self):
        self._create_rooms()
        self._create_corridors()

    def _create_rooms(self):
        # Example room creation logic
        for _ in range(10):  # Create 10 rooms
            w = random.randint(3, 6)
            h = random.randint(3, 6)
            x = random.randint(0, self.width - w - 1)
            y = random.randint(0, self.height - h - 1)
            for i in range(h):
                for j in range(w):
                    self.map[y + i][x + j] = 0

    def _create_corridors(self):
        # Example corridor creation logic
        for _ in range(20):  # Create 20 corridors
            x1 = random.randint(0, self.width - 1)
            y1 = random.randint(0, self.height - 1)
            x2 = random.randint(0, self.width - 1)
            y2 = random.randint(0, self.height - 1)
            self._create_corridor(x1, y1, x2, y2)

    def _create_corridor(self, x1, y1, x2, y2):
        # Simple corridor creation logic (straight line)
        if x1 == x2 or y1 == y2:
            for x in range(min(x1, x2), max(x1, x2) + 1):
                for y in range(min(y1, y2), max(y1, y2) + 1):
                    self.map[y][x] = 0
        else:
            for x in range(min(x1, x2), max(x1, x2) + 1):
                self.map[y1][x] = 0
            for y in range(min(y1, y2), max(y1, y2) + 1):
                self.map[y][x2] = 0

    def print_map(self):
        for row in self.map:
            print("".join(["#" if cell == 1 else "." for cell in row]))

if __name__ == "__main__":
    dungeon = Dungeon(20, 10)
    dungeon.generate()
    dungeon.print_map()

# Generated by Copilot