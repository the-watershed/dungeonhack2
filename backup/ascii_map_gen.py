import tkinter as tk
from tkinter import ttk

# Function to create a DOS-like window
def create_dos_window(parent):
    dos_window = tk.Text(parent, width=80, height=25, bg="black", fg="green", insertbackground="green")
    dos_window.pack(fill=tk.BOTH, expand=True, padx=3, pady=3)
    return dos_window

# Function to update the DOS window with a countdown
def update_dos_window(dos_window, count):
    if count == 9999:
        dos_window.insert(tk.END, "Doing nothing, one sec...\n")
    if count >= 0:
        dos_window.insert(tk.END, f"{count}\n")
        dos_window.see(tk.END)
        count -= 1
        dos_window.after(1000, update_dos_window, dos_window, count)

# Function to create the main window
def create_window():
    root = tk.Tk()
    root.title("Full Screen Table")
    root.attributes("-fullscreen", True)

    # Create a frame for the left column (85% of the screen)
    left_frame = ttk.Frame(root, width=int(root.winfo_screenwidth() * 0.85), height=root.winfo_screenheight(), padding=3)
    left_frame.grid(row=0, column=0, sticky="nsew")

    # Create a frame for the right column (15% of the screen)
    right_frame = ttk.Frame(root, width=int(root.winfo_screenwidth() * 0.15), height=root.winfo_screenheight(), padding=3)
    right_frame.grid(row=0, column=1, sticky="nsew")

    # Add panels into the left and right frames
    left_panel = ttk.Frame(left_frame, relief='sunken')
    left_panel.pack(fill=tk.BOTH, expand=True, padx=3, pady=3)

    right_panel_top = ttk.Frame(right_frame, relief='sunken')
    right_panel_top.pack(fill=tk.BOTH, expand=True, padx=3, pady=3)

    right_panel_bottom = ttk.Frame(right_frame, relief='sunken')
    right_panel_bottom.pack(fill=tk.X, padx=3, pady=3)

    # Add DOS window to the left panel
    dos_window = create_dos_window(left_panel)

    # Add buttons and labels to the bottom right panel
    generate_button = ttk.Button(right_panel_bottom, text="Generate", command=lambda: print("Generate button clicked"))
    generate_button.grid(row=0, column=0, sticky="w", padx=5, pady=5)

    generate_label = ttk.Label(right_panel_bottom, text="Generates a new ASCII map.")
    generate_label.grid(row=0, column=1, sticky="w", padx=5, pady=5)

    exit_button = ttk.Button(right_panel_bottom, text="Exit", command=root.quit)
    exit_button.grid(row=1, column=0, sticky="w", padx=5, pady=5)

    exit_label = ttk.Label(right_panel_bottom, text="Exits the program.")
    exit_label.grid(row=1, column=1, sticky="w", padx=5, pady=5)

    # Start the countdown in the DOS window
    update_dos_window(dos_window, 9999)

    # Configure grid weights
    root.grid_columnconfigure(0, weight=85)
    root.grid_columnconfigure(1, weight=15)
    root.grid_rowconfigure(0, weight=1)

    return root

def main():
    root = create_window()
    root.mainloop()

if __name__ == "__main__":
    main()

# Generated by Copilot